--source suite/versioning/primary_or_unique.inc
--source suite/versioning/common.inc
--source suite/versioning/engines.inc

--replace_result $sys_datatype_expl SYS_DATATYPE "$KEY_TYPE" KEY_TYPE
eval create or replace table t(
  id int,
  $KEY_TYPE(id),
  x int,
  row_start $sys_datatype_expl as row start invisible,
  row_end $sys_datatype_expl as row end invisible,
  period for system_time(row_start, row_end)
) with system versioning;

insert t values (1, 2);
replace t values (1, 3);
replace t values (1, 3);
select *, current_row(row_end) as current, count(row_start) = 1 as unique_start,
    row_start != 0 as start_nonzero
  from t for system_time all
  group by row_start order by x, row_end;

--echo # MDEV-15990: REPLACE on a precise-versioned table
--echo # returns duplicate key error (ER_DUP_ENTRY)
replace t values (1, 3), (1, 30), (1, 40);
select *, current_row(row_end) as current, row_start != 0 as start_nonzero
  from t for system_time all order by x, row_end;

select count(row_start) != 1 as empty from t for system_time all
  group by row_start having empty = 1;
drop table t;

--echo # replace on unversioned field shoud create history record
--replace_result $sys_datatype_expl SYS_DATATYPE "$KEY_TYPE" KEY_TYPE
eval create or replace table t(
  id int,
  $KEY_TYPE(id),
  x int without system versioning,
  row_start $sys_datatype_expl as row start invisible,
  row_end $sys_datatype_expl as row end invisible,
  period for system_time(row_start, row_end)
) with system versioning;

insert t values (1, 2);
replace t values (1, 3);
select *, current_row(row_end) as current, count(row_start) = 1 as unique_start,
    row_start != 0 as start_nonzero
  from t for system_time all
  group by row_start order by x, row_end;
drop table t;

--replace_result $sys_datatype_expl SYS_DATATYPE
eval create table t (
  id int unique,
  x int,
  row_start $sys_datatype_expl as row start invisible,
  row_end $sys_datatype_expl as row end invisible,
  period for system_time (row_start, row_end)
) with system versioning;

insert t values (1, 2);
replace t values (1, 3);
select *, current_row(row_end) as current from t for system_time all order by x;
drop table t;

--echo # MDEV-15645 Assertion `table->insert_values' failed in write_record upon REPLACE into a view with underlying versioned table
create or replace table t1 (a int, b int, primary key (a), unique(b)) with system versioning;
insert into t1 values (1,1);
create or replace table t2 (c int);
create or replace view v as select t1.* from t1 join t2;
replace into v (a, b) select a, b from t1;

drop database test;
create database test;
